// Code generated by protoc-gen-go. DO NOT EDIT.
// source: currency.proto

package curproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Currency represents currency information
type Currency struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number               int32    `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Country              string   `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3dc60ed002193ea, []int{0}
}

func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (m *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(m, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Currency) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Currency) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Currency) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

// CurrencyList a collection of currencies
type CurrencyList struct {
	Items                []*Currency `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CurrencyList) Reset()         { *m = CurrencyList{} }
func (m *CurrencyList) String() string { return proto.CompactTextString(m) }
func (*CurrencyList) ProtoMessage()    {}
func (*CurrencyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3dc60ed002193ea, []int{1}
}

func (m *CurrencyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyList.Unmarshal(m, b)
}
func (m *CurrencyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyList.Marshal(b, m, deterministic)
}
func (m *CurrencyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyList.Merge(m, src)
}
func (m *CurrencyList) XXX_Size() int {
	return xxx_messageInfo_CurrencyList.Size(m)
}
func (m *CurrencyList) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyList.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyList proto.InternalMessageInfo

func (m *CurrencyList) GetItems() []*Currency {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*Currency)(nil), "curproto.Currency")
	proto.RegisterType((*CurrencyList)(nil), "curproto.CurrencyList")
}

func init() { proto.RegisterFile("currency.proto", fileDescriptor_d3dc60ed002193ea) }

var fileDescriptor_d3dc60ed002193ea = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2e, 0x2d, 0x2a,
	0x4a, 0xcd, 0x4b, 0xae, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0x2e, 0x2d, 0x02,
	0xb3, 0x94, 0x52, 0xb8, 0x38, 0x9c, 0xa1, 0x72, 0x42, 0x42, 0x5c, 0x2c, 0xc9, 0xf9, 0x29, 0xa9,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0x36, 0x48, 0x2c, 0x2f, 0x31, 0x37, 0x55, 0x82,
	0x09, 0x22, 0x06, 0x62, 0x0b, 0x89, 0x71, 0xb1, 0xe5, 0x95, 0xe6, 0x26, 0xa5, 0x16, 0x49, 0x30,
	0x2b, 0x30, 0x6a, 0xb0, 0x06, 0x41, 0x79, 0x42, 0x12, 0x5c, 0xec, 0xc9, 0xf9, 0xa5, 0x79, 0x25,
	0x45, 0x95, 0x12, 0x2c, 0x60, 0xe5, 0x30, 0xae, 0x92, 0x05, 0x17, 0x0f, 0xcc, 0x16, 0x9f, 0xcc,
	0xe2, 0x12, 0x21, 0x0d, 0x2e, 0xd6, 0xcc, 0x92, 0xd4, 0xdc, 0x62, 0x09, 0x46, 0x05, 0x66, 0x0d,
	0x6e, 0x23, 0x21, 0x3d, 0x98, 0x7b, 0xf4, 0x60, 0xca, 0x82, 0x20, 0x0a, 0x92, 0xd8, 0xc0, 0xc2,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x7a, 0x70, 0x71, 0xc2, 0x00, 0x00, 0x00,
}
